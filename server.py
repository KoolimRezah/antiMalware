from socket import *
import os
import hashlib
import ssl
import sys
import tester
try:
    import pefile
except:
    print r"pefile library is not installed"
    sys.exit()

curPath = os.path.dirname(os.path.abspath(__file__))

sendSize = 1024

# if len(sys.argv) <= 2:
#    print r"Usage: server.py -f file_name"
#    sys.exit()

class Logger(object):
    def __init__(self, filename="Default.log"):
        self.terminal = sys.stdout
        self.log = open(filename, "w")

    def write(self, message):
        self.terminal.write(message)
        self.log.write(message)


#Hot to use: sys.stdout = Logger("yourlogfilename.txt")

def makeSock():
    "Creates a TCP socket and listens on port 10056"
    sock = socket(AF_INET, SOCK_STREAM)
    sock.bind(('', 10056))
    sock.listen(SOMAXCONN)
    print "Listening"

    client, addr = sock.accept()

    print "accepted"
    return (client, sock)


def getFile(fName, size, client):
    "Recieves the file name, size and the client socket and gets the file from the client"
    print size,
    f = open(fName, "wb")
    while (size > 0):
        data = client.recv(sendSize)
        f.write(data)
        client.sendall("c" * 1024)
        #print f.read()
        size = size - sendSize
        print "\r%3d" % size,  #debugging
    print ""
    return f


def test(path, tests):
    print "Starting tests...(this might take a while)"
    print "----------------"
    stdout = sys.stdout
    sys.stdout = Logger(os.path.join(curPath, "results", "results.txt"))
    try:
        tester.main(path, tests)
    except Exception, e:
        "Failed to execute tests: ", e
    finally:
        sys.stdout = stdout


def sendResults(client):
    print "----------------"
    print "Sending results back to client..."
    with open(os.path.join(curPath, "results", "results.txt"), "rt") as f:
        results = f.read()
        #print results
        client.send(results)
    print "Finished sending results!"


#def main(fileName):
def main():
    """
    Starts the socket and runs the tests

    :raise Exception:
    """
    while (True):
        client, sock = makeSock()
        sizeAndTests = client.recv(4096)
        print sizeAndTests
        fSize = int(sizeAndTests.split(',')[0])
        client.send('c' * 4096)
        resultHash = client.recv(1024)
        #print resultHash
        client.send('c' * 1024)
        path = os.path.join(curPath, "RecievedFile", "file.exe")
        f = getFile(path, fSize, client)
        f.close()

        f = open(path, "rb")

        recievedHash = hashlib.sha256(f.read()).hexdigest()
        #print recievedHash
        if (recievedHash != resultHash):
            print "File not recieved successfully"
            raise Exception("Bad File")

        f.close()
        test(path, sizeAndTests.split(',')[1])
        sendResults(client)
        sock.close()
        client.close()


if __name__ == '__main__':
    #parser = optparse.OptionParser()
    #parser.add_option("-f","--file",dest="file",help="File to recieve")
    #option,argument = parser.parse_args()
    try:
        #main(option.file)
        main()
    except Exception, e:
        print "Faield to execute main:", e
